<Application x:Class="SolderingRobotController.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="btn" TargetType="Button">
            <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="8,8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Border Name="dropShadowBorder" CornerRadius="4" BorderBrush="Transparent" BorderThickness="0" Visibility="Hidden">
                                    <Border.Background>
                                        <SolidColorBrush Color="#FF295564" Opacity="0.3"/>
                                       
                                    </Border.Background>
                                </Border>
                                <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--default button highlight-->
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <!--inner drop shadow when pressed / checked-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.60"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btn-default" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#999"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#ccc"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-blue" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#428bca"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#357ebd"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-green" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#5cb85c"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#4cae4c"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-info" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#5bc0de"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#46b8da"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-orange" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#f0ad4e"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#eea236"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-red" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#d9534f"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#d43f3a"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="{x:Type RadioButton}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="White" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Height="36" Width="36">
                                    <!--Define size of the Bullet-->

                                    <!--The two borders-->
                                    <Border Name="RadioOuter" Background="Transparent" BorderBrush="LightGray" BorderThickness="2" CornerRadius="25" />
                                    <Border CornerRadius="25" Margin="8" Name="RadioMark" Background="#FF449d44" Visibility="Hidden" />

                                </Grid>
                            </BulletDecorator.Bullet>

                            <!--Text element-->
                            <TextBlock Margin="10,4,0,0" Foreground="#FF3E3E3E" FontFamily="Helvetica Neue,Helvetica,Arial,sans-serif" FontSize="24">
       <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>

                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">

                                <!--If item is checked, trigger the visibility of the mark
and change the color of the selected bullet into a darker gray for better highlighting-->
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFADADAD" />

                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type CheckBox}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="White" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Height="36" Width="36">
                                    <Border Name="RadioOuter" Background="Transparent" BorderBrush="LightGray" BorderThickness="2" CornerRadius="25" />
                                    <Border CornerRadius="25" Margin="8" Name="RadioMark" Background="#FF449d44" Visibility="Hidden" />

                                </Grid>
                            </BulletDecorator.Bullet>
                            <TextBlock Margin="10,4,0,0" Foreground="#FF3E3E3E" FontFamily="Helvetica Neue,Helvetica,Arial,sans-serif" FontSize="16">
       <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>

                   
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFADADAD" />

                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
